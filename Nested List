5
Harry
37.21
Berry
37.21
Tina
37.2
Akriti
41
Harsh
39

Output:
Berry
Harry

There are  students in this class whose names and grades are assembled to build the following list:
python students = [['Harry', 37.21], ['Berry', 37.21], ['Tina', 37.2], ['Akriti', 41], ['Harsh', 39]]
The lowest grade of  belongs to Tina. The second lowest grade of  belongs to both Harry and Berry, so we order their names alphabetically and print each name on a new line.

Program:

if __name__ == '__main__':
    arr=[]
    for _ in range(int(input())):
        name = input()
        score = float(input())
        arr.append([name,score])
        
    
    second_max=(sorted(list(set(b for a,b in arr))))[1]
    
    print('\n'.join(a for a,b in sorted(arr) if b==second_max))
    
    
    NOte: If we want to sort the nested list by the marks(as in the above case we use the below method  
    # arr.sort(key=lambda a: a[1])
    # print(arr)
    
    lambda is a function
    
    
    Traditional Approach
    
    if __name__ == '__main__':
    students=[]
    for _ in range(int(input())):
        name = input()
        score = float(input())
        students.append([name,score])
    
    min_term = 101
    for i in range(len(students)):
        if min_term>float(students[i][1]):
            min_term=float(students[i][1])
    
    second_min=101
    for i in range(len(students)):
        if float(students[i][1])>float(min_term) and second_min>float(students[i][1]):
            second_min=float(students[i][1])
    
    res=[]
    for a,b in students:
        if b==second_min:
            res.append(a)
    print('\n'.join(sorted(res)))
